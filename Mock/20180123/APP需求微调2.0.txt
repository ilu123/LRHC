
UI界面和数据通信的同步和异步问题 (OK)
-------------------------------------------------------------------------
APP测试发现socket的传输会导致UI界面的卡顿甚至卡死。
这样对用户体验是很不好的，用户碰到这种情况只能重启APP。
希望能将传输和显示改成异步的。 
recv函数在后台接收阻塞的时候，不能影响到UI交互。 
socket接收添加超时处理（3~5秒），如果超时了，弹出提示信息等。。。
-------------------------------------------------------------------------




新加获取系统信息
-------------------------------------------------------------------------
getSysMsg.cpp
后台实时监听系统发过来的消息。
每收到一条消息，则在app界面顶端显示一条消息。 消息持续时间2秒钟， 两秒钟之内如果出现新消息，更新消息。（详见金雷getSysMsg.cpp程序的演示）
-------------------------------------------------------------------------




导航程序
-------------------------------------------------------------------------
RVIZ.cpp
代码改变部分:
1. 接受socket信息 和 显示 分成两个线程异步执行 （之前是同步的， socket接收会造成UI卡顿，所以改成了异步）
2. 添加了指定方向的功能。（详见金雷RVIZ.cpp程序的演示）
-------------------------------------------------------------------------




laser扫图程序 (OK)
-------------------------------------------------------------------------
laserMapClient.cpp
代码改变部分：
1. 扫图的时候， 添加了之前点云地图作为参照（详见金累执行laserMapClient的效果）

laserMapClient.cpp扫图完成后会保存【currentMap.pgm】。 需要在app中自动保存成【地图名.pgm】到本地文件,  其中地图名为当前地图名称
-------------------------------------------------------------------------





系统命令 (OK)
——-----------------------------------------------------------------------
fakeserial.cpp
更改部分：
1. 添加了 reset_system 重置系统的命令 (OK)
2. 取消了 bringup 开启地盘的命令 (OK)
3. 添加了 version 查看版本号的命令
——-----------------------------------------------------------------------





地图编辑
-------------------------------------------------------------------------
需要新加功能：
1. 将轨迹自动白化处理的功能
在laserMapClient.cpp中， 机器人的走过的区域会被涂成灰度值为 175的灰色。在地图编辑中， 需要一个button，自动将地图中所有被涂成175的像素改成白色255。 

-------------------------------------------------------------------------






地图载入是否成功的判断 (OK)
-------------------------------------------------------------------------
如果地图载入成功， 则pointcloud.cpp程序就能收到点云信息。 
请以这个条件判断地图是否载入成功
如果载入成功，则弹出"地图载入成功"消息
-------------------------------------------------------------------------





地图保存是否成功的判断 (OK)
-------------------------------------------------------------------------
地图保存成功后，需要弹出"地图保存成功"消息
参照 pointcloud.cpp
-------------------------------------------------------------------------





更新程序
-------------------------------------------------------------------------
需要加入更新模块
应实现如下功能

1. 开机后检查SLAM版的版本号， 参见系统命令之查看版本号
2. 开机后检查云端版本号， 版本号目前放在 "http://test-1255413295.cosbj.myqcloud.com/version.txt"
3. 如果发现云端版本号高于slam板版本号，则提醒用户是否更新， 如果用户选择更新，则下载【更新文件】, 解析更新文件， 发送更新指令。 


4.【更新文件】 目前放在 "http://test-1255413295.cosbj.myqcloud.com/update.txt"
update.txt 文件内部格式：
【文件名】  【路径】  【网络地址】
样例如下
*************************************************************************************
version.txt	/home/hclr/Desktop	http://test-1255413295.cosbj.myqcloud.com/version.txt
RGBD   		/home/hclr/SLAM  	http://test-1255413295.cosbj.myqcloud.com/RGBD
handle  	/home/hclr/socket 	http://test-1255413295.cosbj.myqcloud.com/handle
*************************************************************************************


5. 解析更新文件update.txt， 更新文件每行代表一个更新的内容，包括【文件名】，【路径】，【网络地址】

6. 发送更新指令，对于更新文件中的每一行解析结果， 发送一次更新指令， 一次更新指令的发送方式参照 update.cpp


-------------------------------------------------------------------------






